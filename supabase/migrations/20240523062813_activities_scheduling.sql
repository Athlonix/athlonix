create type "public"."frequency" as enum ('weekly', 'monthly', 'yearly', 'daily');

create table "public"."ACTIVITIES_EXCEPTIONS" (
    "id" bigint generated by default as identity not null,
    "id_activity" bigint,
    "old_start_date" timestamp without time zone,
    "old_end_date" timestamp without time zone,
    "new_start_date" timestamp without time zone,
    "new_end_date" timestamp without time zone,
    "min_participants" integer,
    "max_participants" integer
);

create table "public"."ACTIVITY_TEAMS" (
    "id_activity" bigint not null,
    "id_user" integer not null
);

alter table "public"."ACTIVITIES" drop column "days";

alter table "public"."ACTIVITIES" drop column "interval";

alter table "public"."ACTIVITIES" drop column "recurrence";

alter table "public"."ACTIVITIES" add column "end_time" time without time zone;

alter table "public"."ACTIVITIES" add column "frequency" frequency;

alter table "public"."ACTIVITIES" add column "days_of_week" days[];

alter table "public"."ACTIVITIES" add column "start_time" time without time zone;

alter table "public"."ACTIVITIES" alter column "end_date" drop not null;

alter table "public"."ACTIVITIES" alter column "end_date" set data type date using "end_date"::date;

alter table "public"."ACTIVITIES" alter column "start_date" set data type date using "start_date"::date;

alter table "public"."MATERIALS" add column "weight_grams" real;

drop type "public"."recurrence";

CREATE UNIQUE INDEX "ACTIVITIES_EXCEPTIONS_pkey" ON public."ACTIVITIES_EXCEPTIONS" USING btree (id);

CREATE UNIQUE INDEX "ACTIVITY_TEAMS_pkey" ON public."ACTIVITY_TEAMS" USING btree (id_activity, id_user);

alter table "public"."ACTIVITIES_EXCEPTIONS" add constraint "ACTIVITIES_EXCEPTIONS_pkey" PRIMARY KEY using index "ACTIVITIES_EXCEPTIONS_pkey";

alter table "public"."ACTIVITY_TEAMS" add constraint "ACTIVITY_TEAMS_pkey" PRIMARY KEY using index "ACTIVITY_TEAMS_pkey";

alter table "public"."ACTIVITIES_EXCEPTIONS" add constraint "ACTIVITIES_EXCEPTIONS_id_activity_fkey" FOREIGN KEY (id_activity) REFERENCES "ACTIVITIES"(id) not valid;

alter table "public"."ACTIVITIES_EXCEPTIONS" validate constraint "ACTIVITIES_EXCEPTIONS_id_activity_fkey";

alter table "public"."ACTIVITY_TEAMS" add constraint "ACTIVITY_TEAM_id_activity_fkey" FOREIGN KEY (id_activity) REFERENCES "ACTIVITIES"(id) not valid;

alter table "public"."ACTIVITY_TEAMS" validate constraint "ACTIVITY_TEAM_id_activity_fkey";

alter table "public"."ACTIVITY_TEAMS" add constraint "ACTIVITY_TEAM_id_user_fkey" FOREIGN KEY (id_user) REFERENCES "USERS"(id) not valid;

alter table "public"."ACTIVITY_TEAMS" validate constraint "ACTIVITY_TEAM_id_user_fkey";

grant delete on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant insert on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant references on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant select on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant trigger on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant truncate on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant update on table "public"."ACTIVITIES_EXCEPTIONS" to "anon";

grant delete on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant insert on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant references on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant select on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant trigger on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant truncate on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant update on table "public"."ACTIVITIES_EXCEPTIONS" to "authenticated";

grant delete on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant insert on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant references on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant select on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant trigger on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant truncate on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant update on table "public"."ACTIVITIES_EXCEPTIONS" to "service_role";

grant delete on table "public"."ACTIVITY_TEAMS" to "anon";

grant insert on table "public"."ACTIVITY_TEAMS" to "anon";

grant references on table "public"."ACTIVITY_TEAMS" to "anon";

grant select on table "public"."ACTIVITY_TEAMS" to "anon";

grant trigger on table "public"."ACTIVITY_TEAMS" to "anon";

grant truncate on table "public"."ACTIVITY_TEAMS" to "anon";

grant update on table "public"."ACTIVITY_TEAMS" to "anon";

grant delete on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant insert on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant references on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant select on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant trigger on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant truncate on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant update on table "public"."ACTIVITY_TEAMS" to "authenticated";

grant delete on table "public"."ACTIVITY_TEAMS" to "service_role";

grant insert on table "public"."ACTIVITY_TEAMS" to "service_role";

grant references on table "public"."ACTIVITY_TEAMS" to "service_role";

grant select on table "public"."ACTIVITY_TEAMS" to "service_role";

grant trigger on table "public"."ACTIVITY_TEAMS" to "service_role";

grant truncate on table "public"."ACTIVITY_TEAMS" to "service_role";

grant update on table "public"."ACTIVITY_TEAMS" to "service_role";

alter table "public"."ACTIVITIES" alter column "start_date" drop not null;